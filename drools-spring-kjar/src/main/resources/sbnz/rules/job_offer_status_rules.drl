package sbnz.rules;
import ftn.sbnz.model.company.Company;
import ftn.sbnz.model.job_offer.JobOffer;
import ftn.sbnz.model.user.JobSeekerRanking;
import ftn.sbnz.model.enums.MedalRank;
import java.time.LocalDate;
import java.sql.Timestamp;
rule "Job Offer Status - NONE"
    agenda-group "job-offer-status" 
    when
        jobOffer: JobOffer(medal != MedalRank.NONE, datePosted.before(Timestamp.valueOf(LocalDate.now().minusDays(30).atStartOfDay())))
    then
        modify(jobOffer) {
            setMedal(MedalRank.NONE)
        }
        System.out.println("Job Offer for position " + jobOffer.getPosition().getTitle() + " status set to NONE");
end

rule "Job Offer Status - GOLD"
agenda-group "job-offer-status"
when
    jobOffer: JobOffer(companyId: company.getId(), offerId: id,
                            datePosted.after(Timestamp.valueOf(LocalDate.now().minusDays(21).atStartOfDay())),
                            medal == MedalRank.SILVER)
        and
        company: Company(id == companyId, medal.getValue() >= MedalRank.GOLD.getValue())
        and
        Number(intValue >= 3) from accumulate (JobSeekerRanking(jobOffer.getId() == offerId), count(1))
    then
        modify(jobOffer) {
            setMedal(MedalRank.GOLD)
        }
        System.out.println("Job Offer for position " + jobOffer.getPosition().getTitle() + " status set to GOLD");
end

rule "Job Offer Status - SILVER"
agenda-group "job-offer-status"
when
    jobOffer: JobOffer(companyId: company.getId(), offerId: id,
                            datePosted.after(Timestamp.valueOf(LocalDate.now().minusDays(14).atStartOfDay())),
                            medal == MedalRank.BRONZE)
        and
        company: Company(id == companyId, medal.getValue() >= MedalRank.SILVER.getValue())
        and
        Number(intValue >= 2) from accumulate (JobSeekerRanking(jobOffer.getId() == offerId), count(1))
    then
        modify(jobOffer) {
            setMedal(MedalRank.SILVER)
        }
        System.out.println("Job Offer for position " + jobOffer.getPosition().getTitle() + " status set to SILVER");
end

rule "Job Offer Status - BRONZE"
agenda-group "job-offer-status"
when
    jobOffer: JobOffer(companyId: company.getId(), offerId: id,
                            datePosted.after(Timestamp.valueOf(LocalDate.now().minusDays(7).atStartOfDay())),
                            medal == MedalRank.NONE)
        and
        company: Company(id == companyId, medal.getValue() >= MedalRank.BRONZE.getValue())
        and
        Number(intValue >= 1) from accumulate (JobSeekerRanking(jobOffer.getId() == offerId), count(1))
    then
        modify(jobOffer) {
            setMedal(MedalRank.BRONZE)
        }
        System.out.println("Job Offer for position " + jobOffer.getPosition().getTitle() + " status set to BRONZE");
end



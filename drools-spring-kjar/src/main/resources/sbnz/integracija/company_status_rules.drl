package sbnz.integracija;

import ftn.sbnz.model.company.Company;
import ftn.sbnz.model.job_offer.JobOfferReview;
import ftn.sbnz.model.enums.MedalRank;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.sql.Timestamp;
import java.util.List;
import java.util.Set;


rule "Company Status - BRONZE"
    agenda-group "company-status"
    when
        $company: Company(medal == MedalRank.NONE) and
        Number(intValue > 5) from accumulate(JobOfferReview
                                                ($date: date, $date.after(Timestamp.valueOf(LocalDate.now().minusMonths(6).atStartOfDay())),
                                                 company == $company,
                                                 jobOffered == true, recommends == true, (ratedUseful - ratedNotUseful) > 5),
                                            count(1))
    then
        System.out.println("Company " + $company.getName() + " status set to BRONZE");
        modify ($company) {
            setMedal(MedalRank.BRONZE)
        }
end

rule "Company Status - SILVER"
    agenda-group "company-status"
    when
        $company: Company(medal == MedalRank.BRONZE, $companyId: id) and
        accumulate  (JobOfferReview ($companyId == company.id, $rating: rating), 
                    $sum: sum($rating),
                    $count: count(1)) and
        accumulate  (JobOfferReview
                        ($date: date, $date.after(Timestamp.valueOf(LocalDate.now().minusMonths(6).atStartOfDay())),
                         company.id == $companyId,
                         jobOffered == true, recommends == true, (ratedUseful - ratedNotUseful) > 5),
                    $totalReviews: count(1)) and
        accumulate  (JobOfferReview
                        ($date: date, $date.after(Timestamp.valueOf(LocalDate.now().minusMonths(6).atStartOfDay())),
                         company.id == $companyId, hired == true,
                         jobOffered == true, recommends == true, (ratedUseful - ratedNotUseful) > 5),
                    $totalHired: count(1)) and
        eval(($sum / $count) > 3.5 && $totalReviews >= 8 && $totalHired >= 5)
    then
        System.out.println("Company " + $company.getName() + " status set to SILVER");
        modify ($company) {
            setMedal(MedalRank.SILVER)
        }
end

rule "Company Status - GOLD"
    agenda-group "company-status"
    when
        $company: Company(medal == MedalRank.SILVER, $companyId: id) and
        accumulate  (JobOfferReview ($companyId == company.id, $rating: rating), 
                    $sum: sum($rating), 
                    $count: count(1)) and
        accumulate  (JobOfferReview
                        ($date: date, $date.after(Timestamp.valueOf(LocalDate.now().minusMonths(6).atStartOfDay())),
                         company.id == $companyId,
                         jobOffered == true, recommends == true, (ratedUseful - ratedNotUseful) > 5),
                    $totalReviews: count(1)) and
        accumulate  (JobOfferReview
                        ($date: date, $date.after(Timestamp.valueOf(LocalDate.now().minusMonths(6).atStartOfDay())),
                         company.id == $companyId, hired == true,
                         jobOffered == true, recommends == true, (ratedUseful - ratedNotUseful) > 5),
                    $totalHired: count(1)) and
        eval(($sum / $count) > 4 && $totalReviews >= 10 && $totalHired >= 8)
    then
        System.out.println("Company " + $company.getName() + " status set to GOLD");
        modify ($company) {
            setMedal(MedalRank.GOLD)
        }
end
package sbnz.integracija;

import ftn.sbnz.model.company.Company;
import ftn.sbnz.model.job_offer.JobOfferReview;
import ftn.sbnz.model.enums.MedalRank;
import ftn.sbnz.model.enums.ReviewStatus;
import ftn.sbnz.model.user.JobSeeker;

import ftn.sbnz.events.InvalidLoginEvent;
import ftn.sbnz.events.UserLoginStatusEvent;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.sql.Timestamp;
import java.util.List;
import java.util.Set;

salience 100
rule "UserLoginStatusEvent check - 3 InvalidLoginEvent in last 30 minutes - force user to change password"
    agenda-group "user-login-check"
    when
        $loginEvent: UserLoginStatusEvent($userId: userId) and
        $user: JobSeeker($userId == id) and
        $eventCounter: Number(intValue > 2) from accumulate(InvalidLoginEvent(jobSeekerId == $userId) over window:time( 30m ), count(1))
    then
        System.out.println("User with username " + $user.getUsername() + " failed login! New ReviewDeclinedEvent added.");
        $loginEvent.setAllowed(false);
        delete($loginEvent);
end

salience 50
rule "UserLoginStatusEvent check - OK"
    agenda-group "user-login-check"
    when
        $loginEvent: UserLoginStatusEvent($userId: userId) and
        $user: JobSeeker($userId == id)
    then
        System.out.println("User with username " + $user.getUsername() + " succeded login!");
        $loginEvent.setAllowed(true);
        delete($loginEvent);
end
